openapi: 3.0.3
info:
  title: PM Users API
  version: "1.0.0"
  description: API for managing users, configuration, and import/export operations.

servers:
  - url: /  # Adapter selon le d√©ploiement

paths:
  /users:
    get:
      tags:
        - Users
      description: Retrieve a list of users
      operationId: listUsers
      summary: List all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - Users
      description: Create a new user
      operationId: createUser
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Validation error

  /users/{user_id}:
    get:
      tags:
        - Users
      description: Retrieve a user by ID
      operationId: getUserById
      summary: Get a user by ID
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      tags:
        - Users
      description: Replace a user by ID
      operationId: replaceUser
      summary: Replace a user
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Validation error
        '404':
          description: User not found
    patch:
      tags:
        - Users
      description: Partially update a user by ID
      operationId: updateUser
      summary: Partially update a user
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Validation error
        '404':
          description: User not found
    delete:
      tags:
        - Users
      description: Delete a user by ID
      operationId: deleteUser
      summary: Delete a user
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found

  /users/verify_password:
    post:
      tags:
        - Users
      description: Verify user password
      operationId: verifyUserPassword
      summary: Verify user password (internal)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required: [email, password]
      responses:
        '200':
          description: Password valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  user_id:
                    type: string
                  company_id:
                    type: integer
        '401':
          description: Invalid password
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean

  /version:
    get:
      tags:
        - Meta
      description: Get API version
      operationId: getApiVersion
      summary: Get API version
      responses:
        '200':
          description: API version
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string

  /config:
    get:
      tags:
        - Meta
      description: Get application configuration
      operationId: getAppConfig
      summary: Get application configuration
      responses:
        '200':
          description: Application config
          content:
            application/json:
              schema:
                type: object
                properties:
                  FLASK_ENV:
                    type: string
                  DEBUG:
                    type: string
                  DATABASE_URI:
                    type: string

  /export/csv:
    get:
      tags:
        - Export
      description: Export users as CSV
      operationId: exportUsersCsv
      produces:
        - text/csv
      summary: Export users as CSV
      responses:
        '200':
          description: CSV file
          content:
            text/csv:
              schema:
                type: string
                format: binary

  /import/csv:
    post:
      tags:
        - Import
      description: Import users from CSV file
      operationId: importUsersCsv
      summary: Import users from CSV
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Import success
        '400':
          description: Import error

  /import/json:
    post:
      tags:
        - Import
      description: Import users from JSON file
      operationId: importUsersJson
      summary: Import users from JSON
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Import success
        '400':
          description: Import error

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        phone_number:
          type: string
        avatar_url:
          type: string
        is_active:
          type: boolean
        is_verified:
          type: boolean
        language:
          type: string
        company_id:
          type: integer
        role_id:
          type: integer
        last_login_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    UserCreate:
      type: object
      required: [email, passwd]
      properties:
        email:
          type: string
        passwd:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        phone_number:
          type: string
        avatar_url:
          type: string
        is_active:
          type: boolean
        is_verified:
          type: boolean
        language:
          type: string
        company_id:
          type: integer
        role_id:
          type: integer
    UserUpdate:
      type: object
      properties:
        email:
          type: string
        passwd:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        phone_number:
          type: string
        avatar_url:
          type: string
        is_active:
          type: boolean
        is_verified:
          type: boolean
        language:
          type: string
        company_id:
          type: integer
        role_id:
          type: integer